{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\src\\\\Map.js\";\n// pacinputimport React from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nvar mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    left: '0px',\n    top: '0px'\n  }\n};\nvar searchboxStyles = {\n  searchbox: {\n    'background-color': '#ffffff',\n    position: 'absolute',\n    width: '8%',\n    height: '8%',\n    left: '0px',\n    top: '0px' // searchbox: {\n    //       background-color: '#fff';\n    //       fontFamily: 'Roboto';\n    //       fontSize: '15px';\n    //       fontWeight: '300';\n    //       marginLeft: '12px';\n    //       padding: '0 11px 0 13px';\n    //     //   textOverflow: 'ellipsis';\n    //       position: 'absolute',\n    //       width: '30%'\n    //       top: '0px';\n    //       left: '0px'\n    //   }\n\n  }\n};\n\nvar searchBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(searchBox, _React$Component);\n\n  function searchBox(props) {\n    var _this;\n\n    _classCallCheck(this, searchBox);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  return searchBox;\n}(React.Component);\n\nexport var Map =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Map, _React$Component2);\n\n  function Map(props) {\n    var _this2;\n\n    _classCallCheck(this, Map);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this2.setDestination = function (dest) {\n      _this2.setState({\n        destination: dest\n      });\n    };\n\n    _this2.loadMap = function () {\n      if (_this2.props && _this2.props.google) {\n        // checks if google is available\n        var google = _this2.props.google;\n        var maps = google.maps;\n        var mapRef = _this2.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = _this2.props.zoom;\n        var _this2$state$currentL = _this2.state.currentLocation,\n            lat = _this2$state$currentL.lat,\n            lng = _this2$state$currentL.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        _this2.map = new maps.Map(node, mapConfig);\n\n        _this2.state.directionsDisplay.setMap(_this2.map); //   let destination = { //unit 1\n        //     lat: 37.868112,\n        //     lng: -122.255033\n        //   }\n        //   this.displayRoute(destination);\n\n\n        var input = document.getElementById('pac-input');\n        var searchBox = new google.maps.places.SearchBox(input);\n\n        _this2.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n        var markers = [];\n        searchBox.addListener('places_changed', function () {\n          var _this3 = this;\n\n          console.log(\"this\");\n          console.log(this);\n          var places = searchBox.getPlaces();\n\n          if (places.length == 0) {\n            return;\n          }\n\n          markers.forEach(function (marker) {\n            marker.setMap(null);\n          });\n          markers = []; //   for each new place, get icon name and location\n          //   var bounds = google.LatLngBounds();\n\n          places.forEach(function (place) {\n            if (!place.geometry) {\n              console.log(\"Returned place contains no geometry\");\n              return;\n            }\n\n            var icon = {\n              url: place.icon,\n              size: google.maps.Size(71, 71),\n              origin: google.maps.Point(0, 0),\n              anchor: google.maps.Point(17, 34),\n              scaledSize: google.maps.Size(25, 25) //   Create a marker for each place.\n\n            };\n            markers.push(new google.maps.Marker({\n              map: _this3,\n              //   i called this.map earlier didnt work\n              icon: icon,\n              title: place.name,\n              position: place.geometry.location\n            }));\n            console.log(place.name); //   console.log(place.geometry.location.lat())\n            //   console.log(place.geometry.location.lng())\n            //   destination = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\n\n            var getLatLng = new Promise(function (resolve, reject) {\n              var lat = place.geometry.location.lat();\n              var lng = place.geometry.location.lng();\n              var dest = {\n                lat: lat,\n                lng: lng\n              };\n              resolve(dest);\n            });\n\n            var getLatLngCallback = function getLatLngCallback(value) {\n              console.log(\"value:\");\n              console.log(value);\n              console.log(_this3.state);\n              console.log(\"state\");\n              console.log(_this3); // this.setState((state) => {\n              //     return {destination: value}\n              // }, () => {\n              //     console.log(this.state.destination)\n              //     this.loadMap()\n              // });\n\n              _this3.setDestination(value);\n            };\n\n            getLatLng.then(function (value) {\n              //   console.log(\"value:\")\n              //   console.log(value)\n              //   console.log(this.state)\n              //   console.log(\"state\")\n              //   this.setState((state) => {\n              //       return {destination: value}\n              //   }, () => {\n              //       console.log(this.state.destination)\n              //       this.loadMap()\n              //   });\n              getLatLngCallback(value);\n            }); //   if (place.geometry.viewport) {\n            //       // Only geocodes have viewport.\n            //       bounds.union(place.geometry.viewport);\n            //     } else {\n            //       bounds.extend(place.geometry.location);\n            //     }\n          }); //   this.map.fitBounds(bounds)\n        });\n        console.log(_this2.state);\n\n        _this2.displayRoute(_this2.state.destination); //  need to call displayRoute here\n\n      }\n    };\n\n    var _this2$props$initialC = _this2.props.initialCenter,\n        _lat = _this2$props$initialC.lat,\n        _lng = _this2$props$initialC.lng;\n    var directionsService = new _this2.props.google.maps.DirectionsService();\n    var directionsDisplay = new _this2.props.google.maps.DirectionsRenderer(); // const searchBox = new this.props.google.maps.places.SearchBox();\n\n    var _searchBox = new _this2.props.google.maps.places.SearchBox(document.getElementById('pac-input'));\n\n    _this2.state = {\n      currentLocation: {\n        lat: _lat,\n        lng: _lng\n      },\n      destination: {\n        lat: 37.868112,\n        lng: -122.255033\n      },\n      directionsService: directionsService,\n      directionsDisplay: directionsDisplay,\n      searchBox: _searchBox\n    };\n    return _this2;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this4.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n\n            _this4.loadMap();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"displayRoute\",\n    value: function displayRoute(destination) {\n      var _this5 = this;\n\n      //display route from current location to specified destination\n      this.state.directionsService.route({\n        origin: new this.props.google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng),\n        destination: new this.props.google.maps.LatLng(destination.lat, destination.lng),\n        travelMode: this.props.google.maps.TravelMode['WALKING']\n      }, function (response, status) {\n        if (status === 'OK') {\n          console.log(_this5.state.currentLocation);\n\n          _this5.state.directionsDisplay.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to: ' + status);\n        }\n      });\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this6 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this6.map,\n          google: _this6.props.google,\n          mapCenter: _this6.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props);\n      var style = Object.assign({}, mapStyles.map);\n      var stylesearchbar = Object.assign({}, searchboxStyles.searchbox);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: stylesearchbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"pac-input\",\n        class: \"controls\",\n        type: \"text\",\n        placeholder: \"Search box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"map\",\n        style: style,\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  return Map;\n}(React.Component);\nexport default Map;\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 37.871295,\n    lng: -122.260314\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};","map":{"version":3,"sources":["C:\\Users\\Lucas Liu\\homebuddySp19\\src\\Map.js"],"names":["React","ReactDOM","axios","mapStyles","map","position","width","height","left","top","searchboxStyles","searchbox","searchBox","props","Component","Map","setDestination","dest","setState","destination","loadMap","google","maps","mapRef","refs","node","findDOMNode","zoom","state","currentLocation","lat","lng","center","LatLng","mapConfig","Object","assign","directionsDisplay","setMap","input","document","getElementById","places","SearchBox","controls","ControlPosition","TOP_LEFT","push","markers","addListener","console","log","getPlaces","length","forEach","marker","place","geometry","icon","url","size","Size","origin","Point","anchor","scaledSize","Marker","title","name","location","getLatLng","Promise","resolve","reject","getLatLngCallback","value","then","displayRoute","initialCenter","directionsService","DirectionsService","DirectionsRenderer","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","prevProps","prevState","recenterMap","route","travelMode","TravelMode","response","status","setDirections","window","alert","current","panTo","children","Children","c","cloneElement","mapCenter","style","stylesearchbar","renderChildren","defaultProps","visible"],"mappings":"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","sourcesContent":["// pacinputimport React from 'react';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst mapStyles = {\r\n    map: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: '0px',\r\n        top: '0px'\r\n    }\r\n};\r\n\r\nconst searchboxStyles = {\r\n    searchbox: {\r\n        'background-color': '#ffffff',\r\n        position: 'absolute',\r\n        width: '8%',\r\n        height: '8%',\r\n        left: '0px',\r\n        top: '0px'\r\n    }\r\n    // searchbox: {\r\n    //       background-color: '#fff';\r\n    //       fontFamily: 'Roboto';\r\n    //       fontSize: '15px';\r\n    //       fontWeight: '300';\r\n    //       marginLeft: '12px';\r\n    //       padding: '0 11px 0 13px';\r\n    //     //   textOverflow: 'ellipsis';\r\n    //       position: 'absolute',\r\n    //       width: '30%'\r\n    //       top: '0px';\r\n    //       left: '0px'\r\n    //   }\r\n};\r\n\r\nclass searchBox extends React.Component {\r\n    constructor(props) {\r\n\r\n    }\r\n}\r\n\r\nexport class Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { lat, lng } = this.props.initialCenter;\r\n\r\n    const directionsService = new this.props.google.maps.DirectionsService();\r\n    const directionsDisplay = new this.props.google.maps.DirectionsRenderer();\r\n    // const searchBox = new this.props.google.maps.places.SearchBox();\r\n    var searchBox = new this.props.google.maps.places.SearchBox(document.getElementById('pac-input'));\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      },\r\n      destination: {\r\n          lat: 37.868112,\r\n          lng: -122.255033\r\n      },\r\n      directionsService : directionsService,\r\n      directionsDisplay : directionsDisplay,\r\n      searchBox : searchBox,\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n          const coords = pos.coords;\r\n          this.setState({\r\n            currentLocation: {\r\n              lat: coords.latitude,\r\n              lng: coords.longitude\r\n            }\r\n          });\r\n          this.loadMap()\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n\r\n  setDestination = (dest) => {\r\n    this.setState({\r\n        destination : dest\r\n    });\r\n  }\r\n\r\n  loadMap = () => {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n\r\n      const mapRef = this.refs.map;\r\n\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      let { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom\r\n        }\r\n      );\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n      this.state.directionsDisplay.setMap(this.map);\r\n\r\n    //   let destination = { //unit 1\r\n    //     lat: 37.868112,\r\n    //     lng: -122.255033\r\n    //   }\r\n    //   this.displayRoute(destination);\r\n\r\n      var input = document.getElementById('pac-input');\r\n      var searchBox = new google.maps.places.SearchBox(input)\r\n      this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\r\n      var markers = [];\r\n\r\n      searchBox.addListener('places_changed', function() {\r\n          console.log(\"this\")\r\n          console.log(this)\r\n          var places = searchBox.getPlaces();\r\n          if (places.length == 0) {\r\n              return;\r\n          }\r\n          markers.forEach(function(marker) {\r\n              marker.setMap(null);\r\n          });\r\n          markers = [];\r\n        //   for each new place, get icon name and location\r\n        //   var bounds = google.LatLngBounds();\r\n          places.forEach((place) => {\r\n              if (!place.geometry) {\r\n                console.log(\"Returned place contains no geometry\");\r\n                return;\r\n              }\r\n              var icon = {\r\n                  url: place.icon,\r\n                  size: google.maps.Size(71, 71),\r\n                  origin: google.maps.Point(0, 0),\r\n                  anchor: google.maps.Point(17, 34),\r\n                  scaledSize: google.maps.Size(25, 25)\r\n              }\r\n            //   Create a marker for each place.\r\n              markers.push(new google.maps.Marker({\r\n                  map: this,\r\n                //   i called this.map earlier didnt work\r\n                  icon: icon,\r\n                  title: place.name,\r\n                  position: place.geometry.location\r\n              }));\r\n              console.log(place.name);\r\n            //   console.log(place.geometry.location.lat())\r\n            //   console.log(place.geometry.location.lng())\r\n            //   destination = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\r\n\r\n              var getLatLng = new Promise(function(resolve, reject) {\r\n                  var lat = place.geometry.location.lat()\r\n                  var lng = place.geometry.location.lng()\r\n                  var dest = {lat, lng}\r\n                  resolve(dest)\r\n              })\r\n\r\n              var getLatLngCallback = (value) => {\r\n                  console.log(\"value:\")\r\n                  console.log(value)\r\n                  console.log(this.state)\r\n                  console.log(\"state\")\r\n                  console.log(this)\r\n                  // this.setState((state) => {\r\n                  //     return {destination: value}\r\n                  // }, () => {\r\n                  //     console.log(this.state.destination)\r\n                  //     this.loadMap()\r\n                  // });\r\n                  this.setDestination(value)\r\n              }\r\n\r\n              getLatLng.then((value) => {\r\n                //   console.log(\"value:\")\r\n                //   console.log(value)\r\n                //   console.log(this.state)\r\n                //   console.log(\"state\")\r\n                //   this.setState((state) => {\r\n                //       return {destination: value}\r\n                //   }, () => {\r\n                //       console.log(this.state.destination)\r\n                //       this.loadMap()\r\n                //   });\r\n                getLatLngCallback(value)\r\n              })\r\n\r\n            //   if (place.geometry.viewport) {\r\n            //       // Only geocodes have viewport.\r\n            //       bounds.union(place.geometry.viewport);\r\n            //     } else {\r\n            //       bounds.extend(place.geometry.location);\r\n            //     }\r\n          })\r\n        //   this.map.fitBounds(bounds)\r\n\r\n    });\r\n      console.log(this.state)\r\n      this.displayRoute(this.state.destination)\r\n    //  need to call displayRoute here\r\n\r\n    }\r\n}\r\n\r\ndisplayRoute(destination) { //display route from current location to specified destination\r\n    this.state.directionsService.route({\r\n        origin: new this.props.google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng),\r\n        destination: new this.props.google.maps.LatLng(destination.lat, destination.lng),\r\n        travelMode: this.props.google.maps.TravelMode['WALKING']\r\n        }, (response, status) => {\r\n            if (status === 'OK') {\r\n                console.log(this.state.currentLocation);\r\n                this.state.directionsDisplay.setDirections(response);\r\n\r\n            } else {\r\n                window.alert('Directions request failed due to: ' + status);\r\n            }\r\n        })\r\n  }\r\n\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n\r\n    if (!children) return;\r\n\r\n\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const style = Object.assign({}, mapStyles.map);\r\n    const stylesearchbar = Object.assign({}, searchboxStyles.searchbox);\r\n\r\n\r\n    return (\r\n      <div>\r\n          <div style={stylesearchbar}>\r\n            <input id=\"pac-input\" class=\"controls\" type=\"text\" placeholder=\"Search box\"/>\r\n          </div>\r\n\r\n        <div id=\"map\" style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n\r\n\r\nMap.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: 37.871295,\r\n    lng: -122.260314\r\n  },\r\n  centerAroundCurrentLocation: true,\r\n  visible: true\r\n};\r\n"]},"metadata":{},"sourceType":"module"}