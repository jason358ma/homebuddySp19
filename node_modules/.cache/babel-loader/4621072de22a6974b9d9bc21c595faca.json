{"ast":null,"code":"import _createClass from \"/Users/dangdang98/Documents/homebuddySp19/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"/Users/dangdang98/Documents/homebuddySp19/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/dangdang98/Documents/homebuddySp19/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/dangdang98/Documents/homebuddySp19/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/dangdang98/Documents/homebuddySp19/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/dangdang98/Documents/homebuddySp19/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dangdang98/Documents/homebuddySp19/src/Map.js\";\n// pacinputimport React from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nvar mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    left: '0px',\n    top: '0px'\n  }\n};\nvar searchboxStyles = {\n  searchbox: {\n    'background-color': '#ffffff',\n    position: 'absolute',\n    width: '8%',\n    height: '8%',\n    left: '0px',\n    top: '0px' // searchbox: {\n    //       background-color: '#fff';\n    //       fontFamily: 'Roboto';\n    //       fontSize: '15px';\n    //       fontWeight: '300';\n    //       marginLeft: '12px';\n    //       padding: '0 11px 0 13px';\n    //     //   textOverflow: 'ellipsis';\n    //       position: 'absolute',\n    //       width: '30%'\n    //       top: '0px';\n    //       left: '0px'\n    //   }\n\n  }\n};\n\nvar searchBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(searchBox, _React$Component);\n\n  function searchBox(props) {\n    var _this;\n\n    _classCallCheck(this, searchBox);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  return searchBox;\n}(React.Component);\n\nexport var Map =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Map, _React$Component2);\n\n  function Map(props) {\n    var _this2;\n\n    _classCallCheck(this, Map);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this2.loadMap = function () {\n      if (_this2.props && _this2.props.google) {\n        // checks if google is available\n        var google = _this2.props.google;\n        var maps = google.maps;\n        var mapRef = _this2.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = _this2.props.zoom;\n        var _this2$state$currentL = _this2.state.currentLocation,\n            lat = _this2$state$currentL.lat,\n            lng = _this2$state$currentL.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        _this2.map = new maps.Map(node, mapConfig);\n\n        _this2.state.directionsDisplay.setMap(_this2.map); //   let destination = { //unit 1\n        //     lat: 37.868112,\n        //     lng: -122.255033\n        //   }\n        //   this.displayRoute(destination);\n\n\n        var input = document.getElementById('pac-input');\n        var searchBox = new google.maps.places.SearchBox(input);\n\n        _this2.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n        var markers = [];\n        searchBox.addListener('places_changed', function () {\n          var places = searchBox.getPlaces();\n\n          if (places.length == 0) {\n            return;\n          }\n\n          markers.forEach(function (marker) {\n            marker.setMap(null);\n          });\n          markers = []; //   for each new place, get icon name and location\n          //   var bounds = google.LatLngBounds();\n\n          places.forEach(function (place) {\n            if (!place.geometry) {\n              console.log(\"Returned place contains no geometry\");\n              return;\n            }\n\n            var icon = {\n              url: place.icon,\n              size: google.maps.Size(71, 71),\n              origin: google.maps.Point(0, 0),\n              anchor: google.maps.Point(17, 34),\n              scaledSize: google.maps.Size(25, 25) //   Create a marker for each place.\n\n            };\n            markers.push(new google.maps.Marker({\n              map: _assertThisInitialized(_assertThisInitialized(_this2)),\n              //   i called this.map earlier didnt work\n              icon: icon,\n              title: place.name,\n              position: place.geometry.location\n            })); //   console.log(place.geometry.location.lat())\n            //   console.log(place.geometry.location.lng())\n            //   destination = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\n\n            var getLatLng = new Promise(function (resolve, reject) {\n              var lat = place.geometry.location.lat();\n              var lng = place.geometry.location.lng();\n              var dest = {\n                lat: lat,\n                lng: lng\n              };\n              resolve(dest);\n            });\n\n            var getLatLngCallback = function getLatLngCallback(value) {\n              console.log(\"value:\");\n              console.log(value);\n              console.log(_this2.state);\n              console.log(\"state\");\n\n              _this2.setState(function (state) {\n                return {\n                  destination: value\n                };\n              }, function () {\n                console.log(_this2.state.destination);\n\n                _this2.loadMap();\n              });\n            };\n\n            getLatLng.then(function (value) {\n              //   console.log(\"value:\")\n              //   console.log(value)\n              //   console.log(this.state)\n              //   console.log(\"state\")\n              //   this.setState((state) => {\n              //       return {destination: value}\n              //   }, () => {\n              //       console.log(this.state.destination)\n              //       this.loadMap()\n              //   });\n              getLatLngCallback(value);\n            }); //   if (place.geometry.viewport) {\n            //       // Only geocodes have viewport.\n            //       bounds.union(place.geometry.viewport);\n            //     } else {\n            //       bounds.extend(place.geometry.location);\n            //     }\n          }); //   this.map.fitBounds(bounds)\n        });\n        console.log(_this2.state);\n\n        _this2.displayRoute(_this2.state.destination); //  need to call displayRoute here\n\n      }\n    };\n\n    var _this2$props$initialC = _this2.props.initialCenter,\n        _lat = _this2$props$initialC.lat,\n        _lng = _this2$props$initialC.lng;\n    var directionsService = new _this2.props.google.maps.DirectionsService();\n    var directionsDisplay = new _this2.props.google.maps.DirectionsRenderer(); // const searchBox = new this.props.google.maps.places.SearchBox();\n\n    var _searchBox = new _this2.props.google.maps.places.SearchBox(document.getElementById('pac-input'));\n\n    _this2.state = {\n      currentLocation: {\n        lat: _lat,\n        lng: _lng\n      },\n      destination: {\n        lat: 37.868112,\n        lng: -122.255033\n      },\n      directionsService: directionsService,\n      directionsDisplay: directionsDisplay,\n      searchBox: _searchBox\n    };\n    return _this2;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this3.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n\n            _this3.loadMap();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"displayRoute\",\n    value: function displayRoute(destination) {\n      var _this4 = this;\n\n      //display route from current location to specified destination\n      this.state.directionsService.route({\n        origin: new this.props.google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng),\n        destination: new this.props.google.maps.LatLng(destination.lat, destination.lng),\n        travelMode: this.props.google.maps.TravelMode['WALKING']\n      }, function (response, status) {\n        if (status === 'OK') {\n          console.log(_this4.state.currentLocation);\n\n          _this4.state.directionsDisplay.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to: ' + status);\n        }\n      });\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this5 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this5.map,\n          google: _this5.props.google,\n          mapCenter: _this5.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props);\n      var style = Object.assign({}, mapStyles.map);\n      var stylesearchbar = Object.assign({}, searchboxStyles.searchbox);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: stylesearchbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"pac-input\",\n        class: \"controls\",\n        type: \"text\",\n        placeholder: \"Search box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"map\",\n        style: style,\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  return Map;\n}(React.Component);\nexport default Map;\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 37.871295,\n    lng: -122.260314\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};","map":{"version":3,"sources":["/Users/dangdang98/Documents/homebuddySp19/src/Map.js"],"names":["React","ReactDOM","axios","mapStyles","map","position","width","height","left","top","searchboxStyles","searchbox","searchBox","props","Component","Map","loadMap","google","maps","mapRef","refs","node","findDOMNode","zoom","state","currentLocation","lat","lng","center","LatLng","mapConfig","Object","assign","directionsDisplay","setMap","input","document","getElementById","places","SearchBox","controls","ControlPosition","TOP_LEFT","push","markers","addListener","getPlaces","length","forEach","marker","place","geometry","console","log","icon","url","size","Size","origin","Point","anchor","scaledSize","Marker","title","name","location","getLatLng","Promise","resolve","reject","dest","getLatLngCallback","value","setState","destination","then","displayRoute","initialCenter","directionsService","DirectionsService","DirectionsRenderer","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","prevProps","prevState","recenterMap","route","travelMode","TravelMode","response","status","setDirections","window","alert","current","panTo","children","Children","c","cloneElement","mapCenter","style","stylesearchbar","renderChildren","defaultProps","visible"],"mappings":"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","sourcesContent":["// pacinputimport React from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\n\nconst mapStyles = {\n    map: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        left: '0px',\n        top: '0px'\n    }\n};\n\nconst searchboxStyles = {\n    searchbox: {\n        'background-color': '#ffffff',\n        position: 'absolute',\n        width: '8%',\n        height: '8%',\n        left: '0px',\n        top: '0px'\n    }\n    // searchbox: {\n    //       background-color: '#fff';\n    //       fontFamily: 'Roboto';\n    //       fontSize: '15px';\n    //       fontWeight: '300';\n    //       marginLeft: '12px';\n    //       padding: '0 11px 0 13px';\n    //     //   textOverflow: 'ellipsis';\n    //       position: 'absolute',\n    //       width: '30%'\n    //       top: '0px';\n    //       left: '0px'\n    //   }\n};\n\nclass searchBox extends React.Component {\n    constructor(props) {\n\n    }\n}\n\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n\n    const directionsService = new this.props.google.maps.DirectionsService();\n    const directionsDisplay = new this.props.google.maps.DirectionsRenderer();\n    // const searchBox = new this.props.google.maps.places.SearchBox();\n    var searchBox = new this.props.google.maps.places.SearchBox(document.getElementById('pac-input'));\n\n\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      destination: {\n          lat: 37.868112,\n          lng: -122.255033\n      },\n      directionsService : directionsService,\n      directionsDisplay : directionsDisplay,\n      searchBox : searchBox,\n    };\n  }\n\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n          this.loadMap()\n        });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  loadMap = () => {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      let { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n      this.state.directionsDisplay.setMap(this.map);\n\n    //   let destination = { //unit 1\n    //     lat: 37.868112,\n    //     lng: -122.255033\n    //   }\n    //   this.displayRoute(destination);\n\n      var input = document.getElementById('pac-input');\n      var searchBox = new google.maps.places.SearchBox(input)\n      this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n      var markers = [];\n\n      searchBox.addListener('places_changed', () => {\n          var places = searchBox.getPlaces();\n          if (places.length == 0) {\n              return;\n          }\n          markers.forEach(function(marker) {\n              marker.setMap(null);\n          });\n          markers = [];\n        //   for each new place, get icon name and location\n        //   var bounds = google.LatLngBounds();\n          places.forEach((place) => {\n              if (!place.geometry) {\n                console.log(\"Returned place contains no geometry\");\n                return;\n              }\n              var icon = {\n                  url: place.icon,\n                  size: google.maps.Size(71, 71),\n                  origin: google.maps.Point(0, 0),\n                  anchor: google.maps.Point(17, 34),\n                  scaledSize: google.maps.Size(25, 25)\n              }\n            //   Create a marker for each place.\n              markers.push(new google.maps.Marker({\n                  map: this,\n                //   i called this.map earlier didnt work\n                  icon: icon,\n                  title: place.name,\n                  position: place.geometry.location\n              }));\n            //   console.log(place.geometry.location.lat())\n            //   console.log(place.geometry.location.lng())\n            //   destination = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\n\n              var getLatLng = new Promise(function(resolve, reject) {\n                  var lat = place.geometry.location.lat()\n                  var lng = place.geometry.location.lng()\n                  var dest = {lat, lng}\n                  resolve(dest)\n              })\n\n              var getLatLngCallback = (value) => {\n                  console.log(\"value:\")\n                  console.log(value)\n                  console.log(this.state)\n                  console.log(\"state\")\n                  this.setState((state) => {\n                      return {destination: value}\n                  }, () => {\n                      console.log(this.state.destination)\n                      this.loadMap()\n                  });\n              }\n\n              getLatLng.then((value) => {\n                //   console.log(\"value:\")\n                //   console.log(value)\n                //   console.log(this.state)\n                //   console.log(\"state\")\n                //   this.setState((state) => {\n                //       return {destination: value}\n                //   }, () => {\n                //       console.log(this.state.destination)\n                //       this.loadMap()\n                //   });\n                getLatLngCallback(value)\n              })\n\n            //   if (place.geometry.viewport) {\n            //       // Only geocodes have viewport.\n            //       bounds.union(place.geometry.viewport);\n            //     } else {\n            //       bounds.extend(place.geometry.location);\n            //     }\n          })\n        //   this.map.fitBounds(bounds)\n\n    });\n      console.log(this.state)\n      this.displayRoute(this.state.destination)\n    //  need to call displayRoute here\n    }\n}\n\n\ndisplayRoute(destination) { //display route from current location to specified destination\n    this.state.directionsService.route({\n        origin: new this.props.google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng),\n        destination: new this.props.google.maps.LatLng(destination.lat, destination.lng),\n        travelMode: this.props.google.maps.TravelMode['WALKING']\n        }, (response, status) => {\n            if (status === 'OK') {\n                console.log(this.state.currentLocation);\n                this.state.directionsDisplay.setDirections(response);\n\n            } else {\n                window.alert('Directions request failed due to: ' + status);\n            }\n        })\n  }\n\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.props);\n    const style = Object.assign({}, mapStyles.map);\n    const stylesearchbar = Object.assign({}, searchboxStyles.searchbox);\n\n\n    return (\n      <div>\n          <div style={stylesearchbar}>\n            <input id=\"pac-input\" class=\"controls\" type=\"text\" placeholder=\"Search box\"/>\n          </div>\n\n        <div id=\"map\" style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\n\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 37.871295,\n    lng: -122.260314\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};\n"]},"metadata":{},"sourceType":"module"}