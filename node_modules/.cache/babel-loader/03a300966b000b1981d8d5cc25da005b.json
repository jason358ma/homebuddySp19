{"ast":null,"code":"import _classCallCheck from \"/Users/Owner/Desktop/homebuddySp19/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Owner/Desktop/homebuddySp19/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Owner/Desktop/homebuddySp19/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Owner/Desktop/homebuddySp19/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Owner/Desktop/homebuddySp19/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Owner/Desktop/homebuddySp19/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // import {GoogleApiComponent} from 'google-maps-react';\n\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { InfoWindow, Marker } from 'google-maps-react';\nimport ReactDOM from 'react-dom'; // import * as ReactDOM from 'react-dom'\n\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow === true) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      var styles = {\n        width: '100%',\n        height: '100%'\n      };\n      return React.createElement(Map, {\n        google: this.props.google,\n        style: styles,\n        zoom: 14,\n        center: {\n          lat: 37.8719,\n          lng: 122.2585\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'San Francisco',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  // apiKey: 'AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo'\n  apiKey: 'AIzaSyBnOC2cYnLyaaYXtnd_IEQWZLkqvg0tqoE'\n})(MapContainer); //\n// export class Container extends React.Component {\n//   render() {\n//     const style = {\n//         width: '100vw',\n//         height: '100vh'\n//     }\n//     if (!this.props.loaded) {\n//       return <div>Loading...</div>\n//     }\n//     return (\n//         <div style={style}>\n//           <Map google={this.props.google}/>\n//         </div>\n//     )\n//   }\n// }\n//\n// export class Map extends React.Component {\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevProps.google !== this.props.google) {\n//             this.loadMap();\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.loadMap();\n//     }\n//\n//     loadMap() { //function called after component rendered\n//         if (this.props && this.props.google) { // Google API is available to use\n//             const {google} = this.props;\n//             const maps = google.maps;\n//             const mapRef = this.refs.map;\n//             const node = ReactDOM.findDOMNode(mapRef);\n//             let zoom = 14;\n//             let lat = 37.774929;\n//             let lng = -122.419416;\n//             const center = new maps.LatLng(lat, lng);\n//             const mapConfig = Object.assign({}, {\n//                 center: center,\n//                 zoom: zoom\n//             })\n//             this.map = new maps.Map(node, mapConfig);\n//             // arguments are DOM node and config. object that creates map\n//         }\n//     }\n//     render() {\n//         return (\n//             <div ref='map'>\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/Owner/Desktop/homebuddySp19/src/App.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","ReactDOM","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","styles","width","height","google","lat","lng","name","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP,C,CAEA;;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AAGA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,iBAAiB,EAAE,KADf;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,aAAa,EAAE;AAHX,KADZ;;AAAA,UAOIC,aAPJ,GAOoB,UAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB;AAAA,aACZ,MAAKC,QAAL,CAAc;AACVL,QAAAA,aAAa,EAAEE,KADL;AAEVH,QAAAA,YAAY,EAAEI,MAFJ;AAGVL,QAAAA,iBAAiB,EAAE;AAHT,OAAd,CADY;AAAA,KAPpB;;AAAA,UAcIQ,OAdJ,GAcc,UAAAJ,KAAK,EAAI;AACf,UAAI,MAAKL,KAAL,CAAWC,iBAAX,KAAiC,IAArC,EAA2C;AACvC,cAAKO,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE,KADT;AAEVC,UAAAA,YAAY,EAAE;AAFJ,SAAd;AAIH;AACJ,KArBL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAuBa;AACL,UAAMQ,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAE,MADM;AAEbC,QAAAA,MAAM,EAAE;AAFK,OAAf;AAIA,aACI,oBAAC,GAAD;AACI,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MADvB;AAEI,QAAA,KAAK,EAAEH,MAFX;AAGI,QAAA,IAAI,EAAI,EAHZ;AAII,QAAA,MAAM,EAAE;AACJI,UAAAA,GAAG,EAAE,OADD;AAEJC,UAAAA,GAAG,EAAE;AAFD,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI,oBAAC,MAAD;AACA,QAAA,OAAO,EAAE,KAAKX,aADd;AAEA,QAAA,IAAI,EAAE,eAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAaI,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,QAAA,OAAO,EAAE,KAAKQ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,KAAL,CAAWG,aAAX,CAAyBa,IAA9B,CADJ,CALJ,CAbJ,CADJ;AAyBH;AArDL;;AAAA;AAAA,EAAkCvB,SAAlC;AAwDA,eAAeE,gBAAgB,CAAC;AAC9B;AACAsB,EAAAA,MAAM,EAAE;AAFsB,CAAD,CAAhB,CAGZlB,YAHY,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// import {GoogleApiComponent} from 'google-maps-react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { InfoWindow, Marker } from 'google-maps-react';\n\n\nimport ReactDOM from 'react-dom';\n// import * as ReactDOM from 'react-dom'\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {}\n    };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow === true) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    }\n\n    render() {\n        const styles = {\n          width: '100%',\n          height: '100%'\n        };\n        return (\n            <Map\n                google={this.props.google}\n                style={styles}\n                zoom = {14}\n                center={{\n                    lat: 37.8719,\n                    lng: 122.2585\n                }}\n            >\n                <Marker\n                onClick={this.onMarkerClick}\n                name={'San Francisco'}\n                />\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}\n                  onClose={this.onClose}\n                >\n                    <div>\n                        <h2>{this.state.selectedPlace.name}</h2>\n                  </div>\n                </InfoWindow>\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n  // apiKey: 'AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo'\n  apiKey: 'AIzaSyBnOC2cYnLyaaYXtnd_IEQWZLkqvg0tqoE'\n})(MapContainer);\n\n//\n// export class Container extends React.Component {\n//   render() {\n//     const style = {\n//         width: '100vw',\n//         height: '100vh'\n//     }\n//     if (!this.props.loaded) {\n//       return <div>Loading...</div>\n//     }\n//     return (\n//         <div style={style}>\n//           <Map google={this.props.google}/>\n//         </div>\n//     )\n//   }\n// }\n//\n// export class Map extends React.Component {\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevProps.google !== this.props.google) {\n//             this.loadMap();\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.loadMap();\n//     }\n//\n//     loadMap() { //function called after component rendered\n//         if (this.props && this.props.google) { // Google API is available to use\n//             const {google} = this.props;\n//             const maps = google.maps;\n//             const mapRef = this.refs.map;\n//             const node = ReactDOM.findDOMNode(mapRef);\n//             let zoom = 14;\n//             let lat = 37.774929;\n//             let lng = -122.419416;\n//             const center = new maps.LatLng(lat, lng);\n//             const mapConfig = Object.assign({}, {\n//                 center: center,\n//                 zoom: zoom\n//             })\n//             this.map = new maps.Map(node, mapConfig);\n//             // arguments are DOM node and config. object that creates map\n//         }\n//     }\n//     render() {\n//         return (\n//             <div ref='map'>\n//             </div>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}