{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas Liu\\\\homebuddySp19\\\\src\\\\Map.js\";\n// pacinputimport React from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nvar mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    left: '0px',\n    top: '0px'\n  }\n};\nvar searchboxStyles = {\n  searchbox: {\n    'background-color': '#ffffff',\n    position: 'absolute',\n    width: '8%',\n    height: '8%',\n    left: '0px',\n    top: '0px' // searchbox: {\n    //       background-color: '#fff';\n    //       fontFamily: 'Roboto';\n    //       fontSize: '15px';\n    //       fontWeight: '300';\n    //       marginLeft: '12px';\n    //       padding: '0 11px 0 13px';\n    //     //   textOverflow: 'ellipsis';\n    //       position: 'absolute',\n    //       width: '30%'\n    //       top: '0px';\n    //       left: '0px'\n    //   }\n\n  }\n};\n\nvar searchBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(searchBox, _React$Component);\n\n  function searchBox(props) {\n    var _this;\n\n    _classCallCheck(this, searchBox);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  return searchBox;\n}(React.Component);\n\nexport var Map =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Map, _React$Component2);\n\n  function Map(props) {\n    var _this2;\n\n    _classCallCheck(this, Map);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this2.setDestination = function (dest) {\n      _this2.setState({\n        destination: dest\n      });\n    };\n\n    _this2.searchFunction = function () {\n      console.log(\"this\");\n      console.log(_assertThisInitialized(_assertThisInitialized(_this2)));\n      var places = searchBox.getPlaces();\n\n      if (places.length == 0) {\n        return;\n      }\n\n      markers.forEach(function (marker) {\n        marker.setMap(null);\n      });\n      markers = []; //   for each new place, get icon name and location\n      //   var bounds = google.LatLngBounds();\n\n      places.forEach(function (place) {\n        if (!place.geometry) {\n          console.log(\"Returned place contains no geometry\");\n          return;\n        }\n\n        var icon = {\n          url: place.icon,\n          size: google.maps.Size(71, 71),\n          origin: google.maps.Point(0, 0),\n          anchor: google.maps.Point(17, 34),\n          scaledSize: google.maps.Size(25, 25) //   Create a marker for each place.\n\n        };\n        markers.push(new google.maps.Marker({\n          map: _assertThisInitialized(_assertThisInitialized(_this2)),\n          //   i called this.map earlier didnt work\n          icon: icon,\n          title: place.name,\n          position: place.geometry.location\n        }));\n        console.log(place.name); //   console.log(place.geometry.location.lat())\n        //   console.log(place.geometry.location.lng())\n        //   destination = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\n\n        var getLatLng = new Promise(function (resolve, reject) {\n          var lat = place.geometry.location.lat();\n          var lng = place.geometry.location.lng();\n          var dest = {\n            lat: lat,\n            lng: lng\n          };\n          resolve(dest);\n        });\n\n        var getLatLngCallback = function getLatLngCallback(value) {\n          console.log(\"value:\");\n          console.log(value);\n          console.log(_this2.state);\n          console.log(\"state\");\n          console.log(_assertThisInitialized(_assertThisInitialized(_this2))); // this.setState((state) => {\n          //     return {destination: value}\n          // }, () => {\n          //     console.log(this.state.destination)\n          //     this.loadMap()\n          // });\n\n          _this2.setDestination(value);\n        };\n\n        getLatLng.then(function (value) {\n          //   console.log(\"value:\")\n          //   console.log(value)\n          //   console.log(this.state)\n          //   console.log(\"state\")\n          //   this.setState((state) => {\n          //       return {destination: value}\n          //   }, () => {\n          //       console.log(this.state.destination)\n          //       this.loadMap()\n          //   });\n          getLatLngCallback(value);\n        }); //   if (place.geometry.viewport) {\n        //       // Only geocodes have viewport.\n        //       bounds.union(place.geometry.viewport);\n        //     } else {\n        //       bounds.extend(place.geometry.location);\n        //     }\n      }); //   this.map.fitBounds(bounds)\n    };\n\n    _this2.loadMap = function () {\n      if (_this2.props && _this2.props.google) {\n        // checks if google is available\n        var _google = _this2.props.google;\n        var maps = _google.maps;\n        var mapRef = _this2.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = _this2.props.zoom;\n        var _this2$state$currentL = _this2.state.currentLocation,\n            lat = _this2$state$currentL.lat,\n            lng = _this2$state$currentL.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        _this2.map = new maps.Map(node, mapConfig);\n\n        _this2.state.directionsDisplay.setMap(_this2.map); //   let destination = { //unit 1\n        //     lat: 37.868112,\n        //     lng: -122.255033\n        //   }\n        //   this.displayRoute(destination);\n\n\n        var input = document.getElementById('pac-input');\n        var searchBox = new _google.maps.places.SearchBox(input);\n\n        _this2.map.controls[_google.maps.ControlPosition.TOP_LEFT].push(input);\n\n        var markers = [];\n        searchBox.addListener('places_changed', ADFADFASDFADF);\n        console.log(_this2.state);\n\n        _this2.displayRoute(_this2.state.destination); //  need to call displayRoute here\n\n      }\n    };\n\n    var _this2$props$initialC = _this2.props.initialCenter,\n        _lat = _this2$props$initialC.lat,\n        _lng = _this2$props$initialC.lng;\n    var directionsService = new _this2.props.google.maps.DirectionsService();\n    var directionsDisplay = new _this2.props.google.maps.DirectionsRenderer(); // const searchBox = new this.props.google.maps.places.SearchBox();\n\n    var _searchBox = new _this2.props.google.maps.places.SearchBox(document.getElementById('pac-input'));\n\n    _this2.state = {\n      currentLocation: {\n        lat: _lat,\n        lng: _lng\n      },\n      destination: {\n        lat: 37.868112,\n        lng: -122.255033\n      },\n      directionsService: directionsService,\n      directionsDisplay: directionsDisplay,\n      searchBox: _searchBox\n    };\n    return _this2;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this3.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n\n            _this3.loadMap();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"displayRoute\",\n    value: function displayRoute(destination) {\n      var _this4 = this;\n\n      //display route from current location to specified destination\n      this.state.directionsService.route({\n        origin: new this.props.google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng),\n        destination: new this.props.google.maps.LatLng(destination.lat, destination.lng),\n        travelMode: this.props.google.maps.TravelMode['WALKING']\n      }, function (response, status) {\n        if (status === 'OK') {\n          console.log(_this4.state.currentLocation);\n\n          _this4.state.directionsDisplay.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to: ' + status);\n        }\n      });\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this5 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this5.map,\n          google: _this5.props.google,\n          mapCenter: _this5.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props);\n      var style = Object.assign({}, mapStyles.map);\n      var stylesearchbar = Object.assign({}, searchboxStyles.searchbox);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: stylesearchbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"pac-input\",\n        class: \"controls\",\n        type: \"text\",\n        placeholder: \"Search box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"map\",\n        style: style,\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  return Map;\n}(React.Component);\nexport default Map;\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 37.871295,\n    lng: -122.260314\n  },\n  centerAroundCurrentLocation: true,\n  visible: true\n};","map":{"version":3,"sources":["C:\\Users\\Lucas Liu\\homebuddySp19\\src\\Map.js"],"names":["React","ReactDOM","axios","mapStyles","map","position","width","height","left","top","searchboxStyles","searchbox","searchBox","props","Component","Map","setDestination","dest","setState","destination","searchFunction","console","log","places","getPlaces","length","markers","forEach","marker","setMap","place","geometry","icon","url","size","google","maps","Size","origin","Point","anchor","scaledSize","push","Marker","title","name","location","getLatLng","Promise","resolve","reject","lat","lng","getLatLngCallback","value","state","then","loadMap","mapRef","refs","node","findDOMNode","zoom","currentLocation","center","LatLng","mapConfig","Object","assign","directionsDisplay","input","document","getElementById","SearchBox","controls","ControlPosition","TOP_LEFT","addListener","ADFADFASDFADF","displayRoute","initialCenter","directionsService","DirectionsService","DirectionsRenderer","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","prevProps","prevState","recenterMap","route","travelMode","TravelMode","response","status","setDirections","window","alert","current","panTo","children","Children","c","cloneElement","mapCenter","style","stylesearchbar","renderChildren","defaultProps","visible"],"mappings":"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","sourcesContent":["// pacinputimport React from 'react';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst mapStyles = {\r\n    map: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: '0px',\r\n        top: '0px'\r\n    }\r\n};\r\n\r\nconst searchboxStyles = {\r\n    searchbox: {\r\n        'background-color': '#ffffff',\r\n        position: 'absolute',\r\n        width: '8%',\r\n        height: '8%',\r\n        left: '0px',\r\n        top: '0px'\r\n    }\r\n    // searchbox: {\r\n    //       background-color: '#fff';\r\n    //       fontFamily: 'Roboto';\r\n    //       fontSize: '15px';\r\n    //       fontWeight: '300';\r\n    //       marginLeft: '12px';\r\n    //       padding: '0 11px 0 13px';\r\n    //     //   textOverflow: 'ellipsis';\r\n    //       position: 'absolute',\r\n    //       width: '30%'\r\n    //       top: '0px';\r\n    //       left: '0px'\r\n    //   }\r\n};\r\n\r\nclass searchBox extends React.Component {\r\n    constructor(props) {\r\n\r\n    }\r\n}\r\n\r\nexport class Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { lat, lng } = this.props.initialCenter;\r\n\r\n    const directionsService = new this.props.google.maps.DirectionsService();\r\n    const directionsDisplay = new this.props.google.maps.DirectionsRenderer();\r\n    // const searchBox = new this.props.google.maps.places.SearchBox();\r\n    var searchBox = new this.props.google.maps.places.SearchBox(document.getElementById('pac-input'));\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      },\r\n      destination: {\r\n          lat: 37.868112,\r\n          lng: -122.255033\r\n      },\r\n      directionsService : directionsService,\r\n      directionsDisplay : directionsDisplay,\r\n      searchBox : searchBox,\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n          const coords = pos.coords;\r\n          this.setState({\r\n            currentLocation: {\r\n              lat: coords.latitude,\r\n              lng: coords.longitude\r\n            }\r\n          });\r\n          this.loadMap()\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n\r\n  setDestination = (dest) => {\r\n    this.setState({\r\n        destination : dest\r\n    });\r\n  }\r\n\r\n  searchFunction = () => {\r\n      console.log(\"this\")\r\n      console.log(this)\r\n      var places = searchBox.getPlaces();\r\n      if (places.length == 0) {\r\n          return;\r\n      }\r\n      markers.forEach(function(marker) {\r\n          marker.setMap(null);\r\n      });\r\n      markers = [];\r\n    //   for each new place, get icon name and location\r\n    //   var bounds = google.LatLngBounds();\r\n      places.forEach((place) => {\r\n          if (!place.geometry) {\r\n            console.log(\"Returned place contains no geometry\");\r\n            return;\r\n          }\r\n          var icon = {\r\n              url: place.icon,\r\n              size: google.maps.Size(71, 71),\r\n              origin: google.maps.Point(0, 0),\r\n              anchor: google.maps.Point(17, 34),\r\n              scaledSize: google.maps.Size(25, 25)\r\n          }\r\n        //   Create a marker for each place.\r\n          markers.push(new google.maps.Marker({\r\n              map: this,\r\n            //   i called this.map earlier didnt work\r\n              icon: icon,\r\n              title: place.name,\r\n              position: place.geometry.location\r\n          }));\r\n          console.log(place.name);\r\n        //   console.log(place.geometry.location.lat())\r\n        //   console.log(place.geometry.location.lng())\r\n        //   destination = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\r\n\r\n          var getLatLng = new Promise(function(resolve, reject) {\r\n              var lat = place.geometry.location.lat()\r\n              var lng = place.geometry.location.lng()\r\n              var dest = {lat, lng}\r\n              resolve(dest)\r\n          })\r\n\r\n          var getLatLngCallback = (value) => {\r\n              console.log(\"value:\")\r\n              console.log(value)\r\n              console.log(this.state)\r\n              console.log(\"state\")\r\n              console.log(this)\r\n              // this.setState((state) => {\r\n              //     return {destination: value}\r\n              // }, () => {\r\n              //     console.log(this.state.destination)\r\n              //     this.loadMap()\r\n              // });\r\n              this.setDestination(value)\r\n          }\r\n\r\n          getLatLng.then((value) => {\r\n            //   console.log(\"value:\")\r\n            //   console.log(value)\r\n            //   console.log(this.state)\r\n            //   console.log(\"state\")\r\n            //   this.setState((state) => {\r\n            //       return {destination: value}\r\n            //   }, () => {\r\n            //       console.log(this.state.destination)\r\n            //       this.loadMap()\r\n            //   });\r\n            getLatLngCallback(value)\r\n          })\r\n\r\n        //   if (place.geometry.viewport) {\r\n        //       // Only geocodes have viewport.\r\n        //       bounds.union(place.geometry.viewport);\r\n        //     } else {\r\n        //       bounds.extend(place.geometry.location);\r\n        //     }\r\n      })\r\n    //   this.map.fitBounds(bounds)\r\n\r\n}\r\n\r\n  loadMap = () => {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n\r\n      const mapRef = this.refs.map;\r\n\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      let { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom\r\n        }\r\n      );\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n      this.state.directionsDisplay.setMap(this.map);\r\n\r\n    //   let destination = { //unit 1\r\n    //     lat: 37.868112,\r\n    //     lng: -122.255033\r\n    //   }\r\n    //   this.displayRoute(destination);\r\n\r\n      var input = document.getElementById('pac-input');\r\n      var searchBox = new google.maps.places.SearchBox(input)\r\n      this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\r\n      var markers = [];\r\n\r\n\r\n      searchBox.addListener('places_changed', ADFADFASDFADF);\r\n      console.log(this.state)\r\n      this.displayRoute(this.state.destination)\r\n    //  need to call displayRoute here\r\n\r\n    }\r\n}\r\n\r\ndisplayRoute(destination) { //display route from current location to specified destination\r\n    this.state.directionsService.route({\r\n        origin: new this.props.google.maps.LatLng(this.state.currentLocation.lat, this.state.currentLocation.lng),\r\n        destination: new this.props.google.maps.LatLng(destination.lat, destination.lng),\r\n        travelMode: this.props.google.maps.TravelMode['WALKING']\r\n        }, (response, status) => {\r\n            if (status === 'OK') {\r\n                console.log(this.state.currentLocation);\r\n                this.state.directionsDisplay.setDirections(response);\r\n\r\n            } else {\r\n                window.alert('Directions request failed due to: ' + status);\r\n            }\r\n        })\r\n  }\r\n\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n\r\n    if (!children) return;\r\n\r\n\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const style = Object.assign({}, mapStyles.map);\r\n    const stylesearchbar = Object.assign({}, searchboxStyles.searchbox);\r\n\r\n\r\n    return (\r\n      <div>\r\n          <div style={stylesearchbar}>\r\n            <input id=\"pac-input\" class=\"controls\" type=\"text\" placeholder=\"Search box\"/>\r\n          </div>\r\n\r\n        <div id=\"map\" style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n\r\n\r\nMap.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: 37.871295,\r\n    lng: -122.260314\r\n  },\r\n  centerAroundCurrentLocation: true,\r\n  visible: true\r\n};\r\n"]},"metadata":{},"sourceType":"module"}